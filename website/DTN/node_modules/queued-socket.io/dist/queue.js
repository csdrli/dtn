'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Queue = exports.runQueue = exports.add = exports.flush = undefined;

var _socket = require('./socket');

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var Queue = new Set();

var flush = function flush() {
  return Queue.clear();
};

var add = function add(key, payload) {
  var priority = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2;
  return Queue.add({
    key: key,
    payload: payload,
    priority: priority
  });
};

var runQueue = function runQueue() {
  var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};

  if (!Queue.size) {
    return false;
  }

  var client = (0, _socket.getClient)();

  if (client && client.connected) {
    var items = [].concat(_toConsumableArray(Queue));

    var sortedItems = items.sort(function (a, b) {
      if (a.priority < b.priority) {
        return -1;
      }

      if (a.priority > b.priority) {
        return 1;
      }

      return 0;
    });

    sortedItems.forEach(callback);

    return flush();
  }

  return false;
};

exports.flush = flush;
exports.add = add;
exports.runQueue = runQueue;
exports.Queue = Queue;